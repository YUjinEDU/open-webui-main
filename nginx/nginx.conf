user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;
    
    server {
        listen 80;
        server_name ${DOMAIN}; # 🌟 환경 변수로 도메인 이름 설정 🌟

        location / {
            proxy_pass http://open-webui:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ollama/ {
            proxy_pass http://ollama:11434/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name ${DOMAIN}; # 🌟 환경 변수로 도메인 이름 설정 🌟

        ssl_certificate /etc/ssl/certs/${DOMAIN}.crt; # 🌟 인증서 파일로 변경 🌟
        ssl_certificate_key /etc/ssl/certs/${DOMAIN}.key; # 🌟 키 파일로 변경 🌟

        location / {
            proxy_pass http://open-webui:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ollama/ {
            proxy_pass http://ollama:11434/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}


## 디렉토리 생성
#mkdir -p ./nginx/certs

# 개인 키와 인증서 서명 요청(CSR) 생성
#openssl genrsa -out ./nginx/certs/mydomain.key 2048

# 인증서 서명 요청(CSR) 생성
#openssl req -new -key ./nginx/certs/mydomain.key -out ./nginx/certs/mydomain.csr

# 인증서 자체 서명 (유효기간: 365일)
#openssl x509 -req -days 365 -in ./nginx/certs/mydomain.csr -signkey ./nginx/certs/mydomain.key -out ./nginx/certs/mydomain.crt

